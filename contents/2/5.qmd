
## `dict` {#sec-dict}

Dictionary `dict` is also very important built-in Python data structure. It is a flexibly sized collection of *key-value* pairs, where key and value are Python objects. One approach for creating a dictionary is to use `{}` and colons to separate keys and values.

```{python}
example = {'a': 'value',
           'b': 1,
           3: 'a',
           4: [1, 2 ,3],}
```
You can access, insert, or set elements using the same syntax as for accessing elements
of a list.

```{python}
example['a']
```

```{python}
example[4]
```


::: {.callout-note collapse="true"}
## Checking keys
We can directly use `in` to check whether a dict contains a key.

```{python}
'a' in example
```
```{python}
1 in example
```

:::


::: {.callout-note collapse="true"}
## `.keys()`, `.values()` and `.items()`
We could use `.keys()` to get all keys. The result is actually an iterator. We could either loop through it using `for`, or simply convert it to a list by `list()`.

```{python}
list(example.keys())
```
Similarly, to get all values, we could use `.values()` method. What we get is an iterator, and we could convert it to a list.

```{python}
list(example.values())
```

Similar to the previous two, `.items()` is used to get key-value pairs, in the same style.

```{python}
list(example.items())
```

:::


::: {.callout-note collapse="true"}
## Update dictionaries

1. To update a key-value pair, you may directly write

```{python}
#| eval: false
dictionary[key] = value
```
If this `key` exists, the key-value pair will be updated. If this `key` doesn't exist, this key-value pair will be added to the dictionary. See the following examples.

```{python}
example['a'] = 'newvalue'
example
```

```{python}
example['newkey'] = 'good!'
example
```

2. To merge with another `dict`, you may use `.update()` method. This is very similar to `.extend()` for `list`. Note that if the same key exists in both dictionaries, the old value will be updated by the new one. Please see the following example.

```{python}
example.update({'a': 'new', 10: [1, 2], 11: 'test'})
example
```


:::
